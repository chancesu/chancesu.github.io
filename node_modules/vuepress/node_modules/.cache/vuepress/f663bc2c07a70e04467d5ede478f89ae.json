{"remainingRequest":"/Users/st/workspace/chancesu/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/st/workspace/chancesu/docs/.vuepress/enhanceApp.js","dependencies":[{"path":"/Users/st/workspace/chancesu/docs/.vuepress/enhanceApp.js","mtime":1550551853000},{"path":"/Users/st/workspace/chancesu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/st/workspace/chancesu/node_modules/babel-loader/lib/index.js","mtime":1526583314000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport upperFirst from 'lodash/upperFirst';\nimport camelCase from 'lodash/camelCase';\nexport default (function (_ref) {\n  var Vue = _ref.Vue,\n      options = _ref.options,\n      router = _ref.router,\n      siteData = _ref.siteData;\n\n  // ...apply enhancements to the app\n  var requireComponent = require.context( // The relative path of the components folder\n  '../../src/components', // Whether or not to look in subfolders\n  true, // The regular expression used to match base component filenames\n  /.(vue|js)$/);\n\n  requireComponent.keys().forEach(function (fileName) {\n    // Get component config\n    var componentConfig = requireComponent(fileName);\n    var fc = fileName.split('/');\n    var f = fc[fc.length - 1]; // Get PascalCase name of component\n\n    var componentName = upperFirst(camelCase(f.replace(/.*\\//, '$1').replace(/\\.\\w+$/, ''))); // Register component globally\n\n    Vue.component(componentName, componentConfig.default || componentConfig);\n  });\n});",{"version":3,"sources":["docs/.vuepress/enhanceApp.js"],"names":["upperFirst","camelCase","Vue","options","router","siteData","requireComponent","require","context","keys","forEach","componentConfig","fileName","fc","split","f","length","componentName","replace","component","default"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,mBAAvB;AACE,OAAOC,SAAP,MAAsB,kBAAtB;AACA,gBAAe,gBAKT;AAAA,MAJJC,GAII,QAJJA,GAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJ;AAEA,MAAMC,mBAAmBC,QAAQC,OAAR,EACvB;AACA,wBAFuB,EAGvB;AACA,MAJuB,EAKvB;AACA,cANuB,CAAzB;;AAUAF,mBAAiBG,IAAjB,GAAwBC,OAAxB,CAAgC,oBAAY;AAC1C;AACA,QAAMC,kBAAkBL,iBAAiBM,QAAjB,CAAxB;AACA,QAAMC,KAAKD,SAASE,KAAT,CAAe,GAAf,CAAX;AACA,QAAMC,IAAIF,GAAGA,GAAGG,MAAH,GAAY,CAAf,CAAV,CAJ0C,CAK1C;;AACA,QAAMC,gBAAgBjB,WACpBC,UACEc,EAAEG,OAAF,CAAU,MAAV,EAAkB,IAAlB,EAAwBA,OAAxB,CAAgC,QAAhC,EAAyC,EAAzC,CADF,CADoB,CAAtB,CAN0C,CAW1C;;AACAhB,QAAIiB,SAAJ,CACEF,aADF,EAEEN,gBAAgBS,OAAhB,IAA2BT,eAF7B;AAID,GAhBD;AAiBD,CAnCD","sourceRoot":"/Users/st/workspace/chancesu","sourcesContent":["import upperFirst from 'lodash/upperFirst'\n  import camelCase from 'lodash/camelCase'\n  export default ({\n    Vue, // the version of Vue being used in the VuePress app\n    options, // the options for the root Vue instance\n    router, // the router instance for the app\n    siteData // site metadata\n  }) => {\n    // ...apply enhancements to the app\n   \n    const requireComponent = require.context(\n      // The relative path of the components folder\n      '../../src/components',\n      // Whether or not to look in subfolders\n      true,\n      // The regular expression used to match base component filenames\n      /.(vue|js)$/\n    )\n    \n    \n    requireComponent.keys().forEach(fileName => {\n      // Get component config\n      const componentConfig = requireComponent(fileName)\n      const fc = fileName.split('/')\n      const f = fc[fc.length - 1]\n      // Get PascalCase name of component\n      const componentName = upperFirst(\n        camelCase(\n          f.replace(/.*\\//, '$1').replace(/\\.\\w+$/,'')\n        )\n      )\n      // Register component globally\n      Vue.component(\n        componentName,\n        componentConfig.default || componentConfig\n      )\n    })\n  }"]}]}